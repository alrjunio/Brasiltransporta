﻿name: CI (Dockerized)

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  COMPOSE_FILE: docker-compose.yml
  TEST_OVERRIDE: docker-compose.ci.yml

jobs:
  test-in-docker:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # ✅ Reduzido significativamente

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: fastapi.Dockerfile
          target: test
          tags: brasiltransporta-test:latest
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Start infrastructure
        run: |
          docker compose -f "$COMPOSE_FILE" -f "$TEST_OVERRIDE" up -d postgres_db redis rabbitmq
          
          # Wait for PostgreSQL com timeout
          echo "Aguardando serviços..."
          timeout 60s bash -c '
            until docker compose exec -T postgres_db pg_isready -U postgres; do
              echo "PostgreSQL não está pronto...";
              sleep 2;
            done
          '

      - name: Run tests
        run: |
          set -e
          # Executa testes e para os containers depois
          docker compose -f "$COMPOSE_FILE" -f "$TEST_OVERRIDE" up \
            --build \
            --abort-on-container-exit \
            --exit-code-from fastapi_app \
            fastapi_app

      - name: Cleanup
        if: always()
        run: |
          docker compose -f "$COMPOSE_FILE" -f "$TEST_OVERRIDE" down -v --remove-orphans
          docker system prune -f