name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest  # Linux runner

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: transporte2412
          POSTGRES_DB: brasiltransporta
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio

      - name: Run tests with PowerShell
        shell: pwsh
        env:
          DATABASE_URL: postgresql://admin:transporte2412@localhost:5432/brasiltransporta
          SECRET_KEY: test-secret-key
        run: |
          Write-Host "🎯 Executando testes..."
          python -m pytest -v
          Write-Host "✅ Execução de testes finalizada!"

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Code quality checks with PowerShell
        shell: pwsh
        run: |
          Write-Host "🔍 Verificando qualidade do código..."
          pip install black flake8

          Write-Host "📝 Verificando formatação com Black..."
          black --check backend/
          if ($LASTEXITCODE -ne 0) {
              Write-Warning "⚠️ Código precisa de formatação. Execute: black backend/"
          }

          Write-Host "🔎 Verificando com Flake8..."
          flake8 backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

          Write-Host "✅ Análise de qualidade completada!"

  deploy:
    runs-on: ubuntu-latest
    needs: [test, code-quality]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy Docker Compose
        shell: pwsh
        run: |
          Write-Host "🚀 Iniciando deploy..."
          docker-compose up -d --build
          Write-Host "✅ Deploy concluído!"
