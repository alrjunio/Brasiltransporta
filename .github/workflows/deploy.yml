﻿name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_FASTAPI: ghcr.io/${{ github.repository }}-fastapi
  IMAGE_WORKER: ghcr.io/${{ github.repository }}-worker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push FastAPI image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: fastapi.Dockerfile
          target: runtime
          push: true
          tags: |
            ${{ env.IMAGE_FASTAPI }}:latest
            ${{ env.IMAGE_FASTAPI }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build and push Worker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: worker.Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_WORKER }}:latest
            ${{ env.IMAGE_WORKER }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    timeout-minutes: 15

    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            cd /opt/brasiltransporta
            
            # Login no registry
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Atualiza serviços
            docker compose pull
            docker compose up -d --no-deps
            
            # Limpeza
            docker system prune -f --volumes