"""Update models for domain compatibility

Revision ID: 00fce675cdcd
Revises: eea1efd16f49
Create Date: 2025-10-02 15:49:59.268460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00fce675cdcd'
down_revision: Union[str, None] = 'eea1efd16f49'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('advertisements', sa.Column('price_amount', sa.Numeric(precision=12, scale=2), nullable=False))
    op.add_column('advertisements', sa.Column('price_currency', sa.String(length=3), nullable=False))
    op.add_column('advertisements', sa.Column('is_featured', sa.Boolean(), nullable=False))
    op.add_column('advertisements', sa.Column('views', sa.Integer(), nullable=False))
    op.add_column('advertisements', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('advertisements', 'vehicle_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('advertisements', 'title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('advertisements', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_constraint('advertisements_store_id_fkey', 'advertisements', type_='foreignkey')
    op.drop_constraint('advertisements_vehicle_id_fkey', 'advertisements', type_='foreignkey')
    op.create_foreign_key(None, 'advertisements', 'vehicles', ['vehicle_id'], ['id'])
    op.create_foreign_key(None, 'advertisements', 'stores', ['store_id'], ['id'])
    op.drop_column('advertisements', 'published_at')
    op.drop_column('advertisements', 'price')
    op.add_column('plans', sa.Column('description', sa.Text(), nullable=False))
    op.add_column('plans', sa.Column('plan_type', sa.String(length=20), nullable=False))
    op.add_column('plans', sa.Column('billing_cycle', sa.String(length=20), nullable=False))
    op.add_column('plans', sa.Column('price_amount', sa.Numeric(precision=12, scale=2), nullable=False))
    op.add_column('plans', sa.Column('price_currency', sa.String(length=3), nullable=False))
    op.add_column('plans', sa.Column('max_ads', sa.Integer(), nullable=False))
    op.add_column('plans', sa.Column('max_featured_ads', sa.Integer(), nullable=False))
    op.add_column('plans', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('plans', sa.Column('features', sa.JSON(), nullable=False))
    op.add_column('plans', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('plans', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.drop_constraint('plans_name_key', 'plans', type_='unique')
    op.drop_column('plans', 'ad_limit')
    op.drop_column('plans', 'price_monthly')
    op.add_column('transactions', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('transactions', sa.Column('currency', sa.String(length=3), nullable=False))
    op.add_column('transactions', sa.Column('payment_method', sa.String(length=20), nullable=False))
    op.add_column('transactions', sa.Column('external_payment_id', sa.String(length=100), nullable=True))
    op.add_column('transactions', sa.Column('payment_metadata', sa.JSON(), nullable=False))
    op.add_column('transactions', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.drop_constraint('transactions_store_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_plan_id_fkey', 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'plans', ['plan_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['id'])
    op.drop_column('transactions', 'store_id')
    op.drop_column('transactions', 'paid_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transactions', sa.Column('paid_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('store_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key('transactions_plan_id_fkey', 'transactions', 'plans', ['plan_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key('transactions_store_id_fkey', 'transactions', 'stores', ['store_id'], ['id'], ondelete='CASCADE')
    op.drop_column('transactions', 'updated_at')
    op.drop_column('transactions', 'payment_metadata')
    op.drop_column('transactions', 'external_payment_id')
    op.drop_column('transactions', 'payment_method')
    op.drop_column('transactions', 'currency')
    op.drop_column('transactions', 'user_id')
    op.add_column('plans', sa.Column('price_monthly', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False))
    op.add_column('plans', sa.Column('ad_limit', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_unique_constraint('plans_name_key', 'plans', ['name'])
    op.drop_column('plans', 'updated_at')
    op.drop_column('plans', 'created_at')
    op.drop_column('plans', 'features')
    op.drop_column('plans', 'is_active')
    op.drop_column('plans', 'max_featured_ads')
    op.drop_column('plans', 'max_ads')
    op.drop_column('plans', 'price_currency')
    op.drop_column('plans', 'price_amount')
    op.drop_column('plans', 'billing_cycle')
    op.drop_column('plans', 'plan_type')
    op.drop_column('plans', 'description')
    op.add_column('advertisements', sa.Column('price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False))
    op.add_column('advertisements', sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'advertisements', type_='foreignkey')
    op.drop_constraint(None, 'advertisements', type_='foreignkey')
    op.create_foreign_key('advertisements_vehicle_id_fkey', 'advertisements', 'vehicles', ['vehicle_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('advertisements_store_id_fkey', 'advertisements', 'stores', ['store_id'], ['id'], ondelete='CASCADE')
    op.alter_column('advertisements', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('advertisements', 'title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('advertisements', 'vehicle_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('advertisements', 'updated_at')
    op.drop_column('advertisements', 'views')
    op.drop_column('advertisements', 'is_featured')
    op.drop_column('advertisements', 'price_currency')
    op.drop_column('advertisements', 'price_amount')
    # ### end Alembic commands ###
