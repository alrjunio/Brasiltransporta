name: brasiltransporta

x-env-defaults: &env-defaults
  DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://postgres:postgres@postgres_db:5432/brasiltransporta}
  REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
  RABBITMQ_URL: ${RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672//}

services:
  postgres_db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-brasiltransporta}
    ports:
      - "5432:5432"
    volumes:
      - brasiltransporta_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_ERLANG_COOKIE: "secret_cookie"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 3

  fastapi_app:
    build:
      context: .
      dockerfile: Docker/fastapi.Dockerfile
      target: runtime
    container_name: fastapi_app
    environment:
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      JWT_ALGORITHM: "HS256"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test-key}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test-secret}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-brasiltransporta-test}
      AWS_ENDPOINT: "https://s3.sa-east-1.amazonaws.com"
      AWS_ENDPOINT_URL: "https://s3.sa-east-1.amazonaws.com"
      <<: *env-defaults
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
       

  test_runner:
    build:
      context: .
      dockerfile: Docker/fastapi.Dockerfile
      target: test
    container_name: test_runner
    environment:
      <<: *env-defaults
      SECRET_KEY: test-secret-key
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: ["pytest", "-v", "--tb=short", "-x", "--disable-warnings"]

volumes:
  brasiltransporta_pgdata:
  rabbitmq_data: